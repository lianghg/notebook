###检索建议、拼音检索、相似匹配

indexed 
	indexed对索引的内存使用，segment的合并，索引的optimize，以及索引的大小都有影响，所以对于不需要索引的字段，indexed设置成false。
	
stored
	stored属性更多的影响存储的IO，可以考虑综合压缩对IO和cpu之间消耗的平衡，也可以把非索引的字段放到其他数据库中存储。
	
omitNorms
	omitNorms在建立索引时会存储相关的影响boost打分的长度因子，因此对于不需要打分排序考虑的，omitNorm设置成true。

index=true，Stored=true   分词储存数据和整体储存数据都有。  使用场景 （既要查询，也要返回）

index=true ，Stored=false  分词储存数据，不整齐储存数据。 使用场景 （既要查询）如果返回 和index=true，Stored=true 的区别，就是节省了空间的但是运算量加大。

index=false stored=true  不分词储存数据，整体储存。 使用场景 （不查询，大需要返回）

index=false stored=false  一般不用，不查询不返回，储存他干嘛，当然也可以为了节约资源适用于不查询，只返回

在Solr中的修改操作就是先删掉再添加

6.6.1 Facet简介
       Facet是solr的高级搜索功能之一,可以给用户提供更友好的搜索体验.在搜索关键字的同时,能够按照Facet的字段进行分组并统计

6.6.2 Facet字段
1.    适宜被Facet的字段

       一般代表了实体的某种公共属性,如商品的分类,商品的制造厂家,书籍的出版商等等.

2.    Facet字段的要求

       Facet的字段必须被索引.一般来说该字段无需分词,无需存储.
       无需分词是因为该字段的值代表了一个整体概念,如电脑的品牌”联想”代表了一个整
	   体概念,如果拆成”联”,”想”两个字都不具有实际意义.另外该字段的值无需进行大小
       写转换等处理,保持其原貌即可.

       无需存储是因为一般而言用户所关心的并不是该字段的具体值,而是作为对查询结果进
	   行分组的一种手段,用户一般会沿着这个分组进一步深入搜索.

3.    特殊情况

       对于一般查询而言,分词和存储都是必要的.比如CPU类型”Intel 酷睿2双核 P7570”, 拆分成”Intel”,”酷睿”,”P7570”这样一些关键字并分别索引,可能提供更好的搜索
	   体验.但是如果将CPU作为Facet字段,最好不进行分词.这样就造成了矛盾,解决方法为, 将CPU字段设置为不分词不存储,然后建立另外一个字段为它的COPY,对这个COPY的
       字段进行分词和存储.

####Solr自带Suggest智能提示

Solr作为一个应用广泛的搜索引擎系统，它内置了智能提示功能，叫做Suggest模块。该模块可选择基于提示词文本做智能提示，还支持通过针对索引的某个字段建立索引词库做智能提示。 (详见solr的wiki页面http://wiki.apache.org/solr/Suggester)
该方案存在的问题是：
@返回的结果是基于索引中字段的词频进行排序，不是用户搜索关键字的频率，因此不能将一些热门关键字排在前面。
@拼音提示，多音字，缩写还是要另外加索引字段。

